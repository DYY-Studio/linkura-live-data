name: Archive Task

permissions:
  contents: write

on:
  workflow_dispatch:
    # Allow manual triggering

jobs:
  archive:
    runs-on: ubuntu-latest
    outputs:
      datetime: ${{ steps.datetime.outputs.time_now }}
      commit_timestamp: ${{ steps.commit_info.outputs.commit_timestamp }}
      has_updates: ${{ steps.check_updates.outputs.has_updates }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Make script executable
      run: chmod +x scripts/archive_task.sh
    
    - name: Run archive task
      env:
        PLAYER_ID: ${{ secrets.PLAYER_ID }}
        PASSWORD: ${{ secrets.PASSWORD }}
        ARCHIVE_JSON: ${{ github.workspace }}/data/archive.json
      run: ./scripts/archive_task.sh

    - name: Check if updates were found
      id: check_updates
      run: |
        if [ -f "/tmp/has_updates" ]; then
          has_updates=$(cat /tmp/has_updates)
          echo "has_updates=$has_updates" >> $GITHUB_OUTPUT
          echo "Archive task found updates: $has_updates"
        else
          echo "has_updates=false" >> $GITHUB_OUTPUT
          echo "No updates file found, assuming no updates"
        fi

    - name: Get the current date time
      id: datetime
      if: steps.check_updates.outputs.has_updates == 'true'
      run: echo "time_now=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT

    - name: Commit changes
      if: steps.check_updates.outputs.has_updates == 'true'
      uses: EndBug/add-and-commit@v9
      with:
        default_author: github_actions
        message: 'auto(${{ steps.datetime.outputs.time_now }}): Update archive info'
        add: |
          - data/archive.json
          - data/archive-details.json

    - name: Get commit timestamp for follow-up jobs
      id: commit_info
      run: |
        # Get the timestamp of the latest commit after potential new commit
        latest_commit_time=$(git log -1 --format=%ct)
        echo "commit_timestamp=$latest_commit_time" >> $GITHUB_OUTPUT
        echo "Latest commit timestamp: $latest_commit_time"
